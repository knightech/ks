/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.confluent.examples.streams.avro.microservices;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class OrderValue extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6271918824826061294L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrderValue\",\"namespace\":\"io.confluent.examples.streams.avro.microservices\",\"fields\":[{\"name\":\"order\",\"type\":{\"type\":\"record\",\"name\":\"Order\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"customerId\",\"type\":\"long\"},{\"name\":\"state\",\"type\":{\"type\":\"enum\",\"name\":\"OrderState\",\"symbols\":[\"CREATED\",\"VALIDATED\",\"FAILED\",\"SHIPPED\"]}},{\"name\":\"product\",\"type\":{\"type\":\"enum\",\"name\":\"Product\",\"symbols\":[\"JUMPERS\",\"UNDERPANTS\",\"STOCKINGS\"]}},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"price\",\"type\":\"double\"}]}},{\"name\":\"value\",\"type\":\"double\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OrderValue> ENCODER =
      new BinaryMessageEncoder<OrderValue>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OrderValue> DECODER =
      new BinaryMessageDecoder<OrderValue>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<OrderValue> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<OrderValue> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<OrderValue>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this OrderValue to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a OrderValue from a ByteBuffer. */
  public static OrderValue fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public io.confluent.examples.streams.avro.microservices.Order order;
  @Deprecated public double value;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OrderValue() {}

  /**
   * All-args constructor.
   * @param order The new value for order
   * @param value The new value for value
   */
  public OrderValue(io.confluent.examples.streams.avro.microservices.Order order, java.lang.Double value) {
    this.order = order;
    this.value = value;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return order;
    case 1: return value;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: order = (io.confluent.examples.streams.avro.microservices.Order)value$; break;
    case 1: value = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'order' field.
   * @return The value of the 'order' field.
   */
  public io.confluent.examples.streams.avro.microservices.Order getOrder() {
    return order;
  }

  /**
   * Sets the value of the 'order' field.
   * @param value the value to set.
   */
  public void setOrder(io.confluent.examples.streams.avro.microservices.Order value) {
    this.order = value;
  }

  /**
   * Gets the value of the 'value' field.
   * @return The value of the 'value' field.
   */
  public java.lang.Double getValue() {
    return value;
  }

  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(java.lang.Double value) {
    this.value = value;
  }

  /**
   * Creates a new OrderValue RecordBuilder.
   * @return A new OrderValue RecordBuilder
   */
  public static io.confluent.examples.streams.avro.microservices.OrderValue.Builder newBuilder() {
    return new io.confluent.examples.streams.avro.microservices.OrderValue.Builder();
  }

  /**
   * Creates a new OrderValue RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OrderValue RecordBuilder
   */
  public static io.confluent.examples.streams.avro.microservices.OrderValue.Builder newBuilder(io.confluent.examples.streams.avro.microservices.OrderValue.Builder other) {
    return new io.confluent.examples.streams.avro.microservices.OrderValue.Builder(other);
  }

  /**
   * Creates a new OrderValue RecordBuilder by copying an existing OrderValue instance.
   * @param other The existing instance to copy.
   * @return A new OrderValue RecordBuilder
   */
  public static io.confluent.examples.streams.avro.microservices.OrderValue.Builder newBuilder(io.confluent.examples.streams.avro.microservices.OrderValue other) {
    return new io.confluent.examples.streams.avro.microservices.OrderValue.Builder(other);
  }

  /**
   * RecordBuilder for OrderValue instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrderValue>
    implements org.apache.avro.data.RecordBuilder<OrderValue> {

    private io.confluent.examples.streams.avro.microservices.Order order;
    private io.confluent.examples.streams.avro.microservices.Order.Builder orderBuilder;
    private double value;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.confluent.examples.streams.avro.microservices.OrderValue.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.order)) {
        this.order = data().deepCopy(fields()[0].schema(), other.order);
        fieldSetFlags()[0] = true;
      }
      if (other.hasOrderBuilder()) {
        this.orderBuilder = io.confluent.examples.streams.avro.microservices.Order.newBuilder(other.getOrderBuilder());
      }
      if (isValidValue(fields()[1], other.value)) {
        this.value = data().deepCopy(fields()[1].schema(), other.value);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing OrderValue instance
     * @param other The existing instance to copy.
     */
    private Builder(io.confluent.examples.streams.avro.microservices.OrderValue other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.order)) {
        this.order = data().deepCopy(fields()[0].schema(), other.order);
        fieldSetFlags()[0] = true;
      }
      this.orderBuilder = null;
      if (isValidValue(fields()[1], other.value)) {
        this.value = data().deepCopy(fields()[1].schema(), other.value);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'order' field.
      * @return The value.
      */
    public io.confluent.examples.streams.avro.microservices.Order getOrder() {
      return order;
    }

    /**
      * Sets the value of the 'order' field.
      * @param value The value of 'order'.
      * @return This builder.
      */
    public io.confluent.examples.streams.avro.microservices.OrderValue.Builder setOrder(io.confluent.examples.streams.avro.microservices.Order value) {
      validate(fields()[0], value);
      this.orderBuilder = null;
      this.order = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'order' field has been set.
      * @return True if the 'order' field has been set, false otherwise.
      */
    public boolean hasOrder() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'order' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.confluent.examples.streams.avro.microservices.Order.Builder getOrderBuilder() {
      if (orderBuilder == null) {
        if (hasOrder()) {
          setOrderBuilder(io.confluent.examples.streams.avro.microservices.Order.newBuilder(order));
        } else {
          setOrderBuilder(io.confluent.examples.streams.avro.microservices.Order.newBuilder());
        }
      }
      return orderBuilder;
    }

    /**
     * Sets the Builder instance for the 'order' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public io.confluent.examples.streams.avro.microservices.OrderValue.Builder setOrderBuilder(io.confluent.examples.streams.avro.microservices.Order.Builder value) {
      clearOrder();
      orderBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'order' field has an active Builder instance
     * @return True if the 'order' field has an active Builder instance
     */
    public boolean hasOrderBuilder() {
      return orderBuilder != null;
    }

    /**
      * Clears the value of the 'order' field.
      * @return This builder.
      */
    public io.confluent.examples.streams.avro.microservices.OrderValue.Builder clearOrder() {
      order = null;
      orderBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'value' field.
      * @return The value.
      */
    public java.lang.Double getValue() {
      return value;
    }

    /**
      * Sets the value of the 'value' field.
      * @param value The value of 'value'.
      * @return This builder.
      */
    public io.confluent.examples.streams.avro.microservices.OrderValue.Builder setValue(double value) {
      validate(fields()[1], value);
      this.value = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'value' field has been set.
      * @return True if the 'value' field has been set, false otherwise.
      */
    public boolean hasValue() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'value' field.
      * @return This builder.
      */
    public io.confluent.examples.streams.avro.microservices.OrderValue.Builder clearValue() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OrderValue build() {
      try {
        OrderValue record = new OrderValue();
        if (orderBuilder != null) {
          record.order = this.orderBuilder.build();
        } else {
          record.order = fieldSetFlags()[0] ? this.order : (io.confluent.examples.streams.avro.microservices.Order) defaultValue(fields()[0]);
        }
        record.value = fieldSetFlags()[1] ? this.value : (java.lang.Double) defaultValue(fields()[1]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OrderValue>
    WRITER$ = (org.apache.avro.io.DatumWriter<OrderValue>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OrderValue>
    READER$ = (org.apache.avro.io.DatumReader<OrderValue>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
