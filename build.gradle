import com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
	id 'java'
    id "com.commercehub.gradle.plugin.avro" version "0.17.0"
    id 'io.spring.dependency-management' version '1.0.4.RELEASE'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: "com.commercehub.gradle.plugin.avro-base"

group = 'net.knightech'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext {
	confluentVersion='5.2.1'
	kafkaVersion = '2.1.0'
    jettyVersion='9.4.18.v20190429'
    jerseyVersion='2.28'
    jacksonVersion='2.9.9'
    kafkaScalaVersion='2.12'
    scalaTestVersion='2.2.0-cp2'

}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://packages.confluent.io/maven' }
}

List kafka = ["org.apache.kafka:kafka-clients:${kafkaVersion}"
             ,"org.apache.kafka:kafka-streams:${kafkaVersion}"]

List avro = ["org.apache.avro:avro:1.9.0"
             ,"io.confluent:kafka-streams-avro-serde:${confluentVersion}"
             ,"io.confluent:kafka-avro-serializer:${confluentVersion}"]

List web = ["io.confluent:monitoring-interceptors:${confluentVersion}"
            , "org.eclipse.jetty:jetty-server:${jettyVersion}"
            , "org.eclipse.jetty:jetty-servlet:${jettyVersion}"
            , "org.glassfish.jersey.containers:jersey-container-servlet:${jerseyVersion}"
            , "org.glassfish.jersey.inject:jersey-hk2:${jerseyVersion}"
            , "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"]


List testing = ["junit:junit:4.12"
                , "org.assertj:assertj-core:3.3.0"
                , "org.apache.kafka:kafka-clients:${kafkaVersion}:test"
                , "org.apache.kafka:kafka-streams:${kafkaVersion}:test"
                , "org.apache.curator:curator-test:2.9.0"
                , "io.confluent:kafka-schema-registry:${confluentVersion}"
                , "io.confluent:kafka-schema-registry:${confluentVersion}:tests"
                , "org.apache.kafka:kafka_${kafkaScalaVersion}:${kafkaVersion}"
                , "org.apache.kafka:kafka_${kafkaScalaVersion}:${kafkaVersion}:test"]

dependencies {
    compile kafka, avro, web
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile "org.mockito:mockito-core:2.7.14"
    compile "org.slf4j:slf4j-simple:1.7.26"
    testCompile testing
}

task copyTask (type: Copy) {
    print "hello"
    from 'dest/java'
    into 'src/main/java'
}

task generateAvro(type: GenerateAvroJavaTask) {
    source("src/main/resources/avro")
    outputDir = file("dest/java")
}